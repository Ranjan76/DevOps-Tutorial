#!/bin/bash

set -e

echo "🚀 Starting full Kubernetes installation on Ubuntu..."

# Step 1: System Update
echo "🔄 Updating system..."
sudo apt update && sudo apt upgrade -y

# Step 2: Disable swap
echo "❌ Disabling swap..."
sudo swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab

# Step 3: Install container runtime (Docker)
echo "🐳 Installing Docker..."
if ! command -v docker &> /dev/null; then
  sudo apt-get install -y ca-certificates curl gnupg lsb-release
  sudo mkdir -p /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  sudo apt update
  sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
else
  echo "✔️ Docker already installed"
fi

# Enable and start Docker
sudo systemctl enable docker
sudo systemctl start docker

# Step 4: Install Kubernetes
echo "☸️ Installing Kubernetes (kubeadm, kubelet, kubectl)..."

# Clean old sources if needed
sudo rm -f /etc/apt/sources.list.d/kubernetes.list

sudo apt-get install -y apt-transport-https curl
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" \
  | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt update
sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

# Step 5: Enable kernel modules
echo "🧠 Enabling netfilter and bridge networking..."
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# Networking settings
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF
sudo sysctl --system

# Step 6: Reset and Initialize Kubernetes
echo "♻️ Resetting old Kubernetes state if any..."
sudo kubeadm reset -f
sudo rm -rf ~/.kube /etc/kubernetes /var/lib/etcd /var/lib/kubelet

echo "🚀 Initializing Kubernetes (with Calico pod network)..."
sudo kubeadm init --pod-network-cidr=192.168.0.0/16

echo "📁 Configuring kubectl access for user $USER..."
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# Step 7: Install Calico CNI
echo "🌐 Installing Calico pod network..."
kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml

# Wait for nodes to become Ready
echo "⏳ Waiting 30s for Calico and node to stabilize..."
sleep 30

# Final Check
kubectl get nodes
kubectl get pods -A

echo "✅ Kubernetes setup complete!"
